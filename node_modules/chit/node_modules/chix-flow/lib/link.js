'use strict';

var util      = require('util');
var uuid      = require('uuid').v4;
var Connector = require('./connector');
var Setting   = require('./setting');

/**
 *
 * xLink
 *
 *
 * Settings:
 *
 *   - ttl
 *   - expire
 *   - dispose: true
 *
 * Just need something to indicate it's an iip.
 *
 * @constructor
 * @public
 */
function Link(id, ioid) {

  this.fills   = 0;
  this.writes  = 0;
  this.rejects = 0;
  this.id = id === undefined ? uuid() : id;
  this.ioid = ioid || uuid();

}

util.inherits(Link, Setting);

Link.create = function(id, ioid) {

  var link = new Link(id, ioid);
  return link;

};

/**
*
* Set target
*
* @param {String} targetId
* @param {String} port
* @param {Object} settings
* @param {String} action
* @public
*/
Link.prototype.setTarget = function(targetId, port, settings, action) {

  this.target = new Connector(settings);
  this.target.wire = this;
  this.target.plug(targetId, port, action);

};

Link.prototype.write = function(p) {

  this.writes++;

  // just re-emit
  this.emit('data', p);

};

/**
*
* Set Source
*
* @param {Object} sourceId
* @param {String} port
* @param {Object} settings
* @param {String} action
* @public
*/
Link.prototype.setSource = function(sourceId, port, settings, action) {

  this.source = new Connector(settings);
  this.source.wire = this;
  this.source.plug(sourceId, port, action);

};

/**
 *
 * Setting of pid's is delayed.
 * I would like them to be available during plug.
 * but whatever.
 *
 */

Link.prototype.setSourcePid = function(pid) {
  this.source.setPid(pid);
};

Link.prototype.setTargetPid = function(pid) {
  this.target.setPid(pid);
};

/**
*
* Set Title
*
* @param {String} title
* @public
*/
Link.prototype.setTitle = function(title) {

  this.metadata = {};
  this.metadata.title = title;

};

Link.prototype.clear = function() {

  this.fills   = 0;
  this.writes  = 0;
  this.rejects = 0;

};

Link.prototype.toJSON = function() {

  // TODO: use schema validation for toJSON
  if (!this.hasOwnProperty('source')) {
    console.log(this);
    throw Error('Link should have a source property');
  }
  if (!this.hasOwnProperty('target')) {
    throw Error('Link should have a target property');
  }

  var link = {
    id: this.id,
    source: this.source.toJSON(),
    target: this.target.toJSON()
  };

  if (this.metadata) {
    link.metadata = this.metadata;
  }

  // not sure if these are really needed.
  // else maybe put them in this.stats or something
  if (this.fills) {
    link.fills = this.fills;
  }

  if (this.rejects) {
    link.rejects = this.rejects;
  }

  if (this.writes) {
    link.writes = this.writes;
  }

  if (this.data !== undefined) {
    link.data = JSON.parse(JSON.stringify(this.data));
  }

  return link;
};

module.exports = Link;
